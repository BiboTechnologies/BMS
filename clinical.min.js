import{initializeApp}from"https://www.gstatic.com/firebasejs/9.0.2/firebase-app.js";import{getDatabase,ref,remove,push,get,onValue,child,set}from"https://www.gstatic.com/firebasejs/9.0.2/firebase-database.js";import{getAuth,onAuthStateChanged,sendPasswordResetEmail,signInWithEmailAndPassword,GoogleAuthProvider,signInWithPopup}from"https://www.gstatic.com/firebasejs/9.0.2/firebase-auth.js";const firebaseConfig={apiKey:"AIzaSyCi_hufIZTzsYtdPGQtvtmKmAkkrydmn_A",authDomain:"abbah-83a7b.firebaseapp.com",databaseURL:"https://abbah-83a7b-default-rtdb.firebaseio.com",projectId:"abbah-83a7b",storageBucket:"abbah-83a7b.appspot.com",messagingSenderId:"379729759051",appId:"1:379729759051:web:e75528d61b02d1e4f536ce",measurementId:"G-H41J2WMR6S"};const app=initializeApp(firebaseConfig);const database=getDatabase(app);const auth=getAuth(app);let authToken;let tokenExpiryTime;function generateToken(){authToken=Math.random().toString(36).substring(2);const currentTime=new Date;const tokenExpiryTime=new Date(currentTime.getTime()+24*60*60*1e3);localStorage.setItem("authToken",authToken);localStorage.setItem("tokenExpiryTime",tokenExpiryTime.toString())}function retrieveTokenFromLocalStorage(){authToken=localStorage.getItem("authToken");const storedExpiryTime=localStorage.getItem("tokenExpiryTime");if(authToken&&storedExpiryTime){tokenExpiryTime=new Date(storedExpiryTime)}}function isTokenValid(){const currentTime=new Date;return tokenExpiryTime>currentTime}window.addEventListener("load",function(){retrieveTokenFromLocalStorage();if(!isTokenValid()){window.location.href="login.html"}});document.addEventListener("contextmenu",function(event){if(document.getElementById("loginpopup").style.display==="block"){event.preventDefault()}document.addEventListener("keydown",function(event){if(event.keyCode===123){event.preventDefault()}})});const allowedEmails=["biboofficial256@gmail.com"];document.getElementById("loginForm").addEventListener("submit",function(event){event.preventDefault();const submitBtn=document.getElementById("submitBtn");submitBtn.innerHTML='<i class="fas fa-spinner fa-spin"></i> Submitting';const email=document.getElementById("email").value;const password=document.getElementById("password").value;signInWithEmailAndPassword(auth,email,password).then(userCredential=>{if(allowedEmails.includes(email)){document.getElementById("loginoverlay").style.display="none";document.getElementById("loginpopup").style.display="none";generateToken()}else{const errorContainer=document.getElementById("errorContainer");errorContainer.textContent="Access denied. You are not authorized.";errorContainer.style.display="block";signOut(auth).then(()=>{setTimeout(function(){submitBtn.innerHTML="Submit"},2e3)}).catch(error=>{console.error("Error signing out:",error)})}}).catch(error=>{const errorMessage=error.message;const errorContainer=document.getElementById("errorContainer");errorContainer.textContent=errorMessage;errorContainer.style.display="block";setTimeout(function(){submitBtn.innerHTML="Submit"},2e3)})});document.getElementById("forgotPasswordLink").addEventListener("click",function(event){event.preventDefault();const email=document.getElementById("email").value;sendPasswordResetEmail(auth,email).then(()=>{showMessage(" A password reset email has been sent. Please check your inbox.")}).catch(error=>{const errorMessage=error.message;alert("Password reset email failed to send. "+errorMessage)})});function displayMessage(title,message,isSuccess=false){const existingMessages=document.querySelectorAll(".retry-message");existingMessages.forEach(function(message){message.remove()});const messageDiv=document.createElement("div");messageDiv.classList.add("retry-message");if(isSuccess){messageDiv.style.backgroundColor="#4caf50"}const closeButton=document.createElement("button");closeButton.classList.add("close-btn");closeButton.innerHTML='<i class="fa fa-times"></i>';closeButton.addEventListener("click",function(){messageDiv.remove()});const titleElement=document.createElement("h2");titleElement.textContent=title;const messageElement=document.createElement("p");messageElement.textContent=message;messageDiv.appendChild(titleElement);messageDiv.appendChild(messageElement);document.body.appendChild(messageDiv);setTimeout(function(){messageDiv.remove()},1500)}function displayUserInformation(user){const profileName=document.querySelector(".profile_info h2");profileName.textContent=user.displayName;const profileImage=document.querySelector(".profile_pic img");profileImage.src=user.photoURL;const dropdownProfileImage=document.querySelector(".user-profile img");dropdownProfileImage.src=user.photoURL;displayMessage("",`Welcome, ${user.displayName}.`,true)}function handleSignInSuccess(user){displayUserInformation(user)}function handleSignInError(error){console.error("Error signing in:",error);displayMessage("Access Denied. Please sign in with a valid email.")}function signInWithGoogle(){var provider=new GoogleAuthProvider;signInWithPopup(auth,provider).then(function(result){const user=result.user;handleSignInSuccess(user)}).catch(function(error){handleSignInError(error)})}window.addEventListener("load",function(){auth.onAuthStateChanged(function(user){if(user){displayUserInformation(user)}else{signInWithGoogle()}})});function retryCallback(){signInWithGoogle()}displayMessage("Signing in...","Please wait...",false);const medicationTakenSelect=document.getElementById("medicationTaken");const medicinesRef=ref(database,"tests");onValue(medicinesRef,snapshot=>{const medicinesData=snapshot.val();medicationTakenSelect.innerHTML="";if(medicinesData){const medicines=Object.values(medicinesData);medicines.forEach(medicine=>{const option=document.createElement("option");option.value=medicine;option.textContent=medicine.name;medicationTakenSelect.appendChild(option)})}});const uploadPrescriptionsButton=document.getElementById("uploadPrescriptionsButton");const overlay=document.getElementById("overlay");const popupContainer=document.getElementById("uploadPrescriptionsPopup");const closePopupButton=document.getElementById("closePopupButton");const prescriptionsForm=document.getElementById("prescriptionsForm");const showPopup=()=>{overlay.style.display="block";popupContainer.style.display="block"};const hidePopup=()=>{overlay.style.display="none";popupContainer.style.display="none"};const handleFormSubmit=e=>{e.preventDefault();const prescription=document.getElementById("prescription").value;const prescriptionsRef=ref(database,`prescriptions/${prescription}`);set(prescriptionsRef,{prescription:prescription}).then(()=>{document.getElementById("prescription").value="";hidePopup();alert("Prescription uploaded successfully!")}).catch(error=>{console.error("Error uploading prescription:",error);alert("Error uploading prescription. Please try again.")})};uploadPrescriptionsButton.addEventListener("click",showPopup);closePopupButton.addEventListener("click",hidePopup);overlay.addEventListener("click",hidePopup);prescriptionsForm.addEventListener("submit",handleFormSubmit);const form=document.querySelector(".popup-form");const submitButton=document.querySelector(".popup-form button");const patientsContainer=document.getElementById("patients");let patients=[];let patientCount=1;form.addEventListener("submit",function(e){e.preventDefault();const name=document.getElementById("name").value.trim();const dob=document.getElementById("dob").value;const sex=document.getElementById("sex").value;const patientData={name:name,dob:dob,sex:sex};const patientsRef=ref(database,"tests");const newPatientRef=child(patientsRef,name);get(newPatientRef).then(snapshot=>{if(snapshot.exists()){alert("Test with the same name already exists.")}else{set(newPatientRef,patientData).then(()=>{form.reset();showMessage("Test details uploaded successfully!");patientCount++}).catch(error=>{console.error("Error uploading patient details:",error);showMessage("Error uploading test details. Please try again.")})}}).catch(error=>{console.error("Error checking if test exists:",error);showMessage("Error checking if test exists. Please try again.")})});searchButton.addEventListener("click",()=>{const searchTerm=searchInput.value.trim();loaderElement.classList.remove("hidden");patientsContainer.innerHTML="";const patientsRef=ref(database,"tests");onValue(patientsRef,snapshot=>{const patientsData=snapshot.val();const searchResults=[];if(patientsData){const patients=Object.values(patientsData);if(searchTerm!==""){patients.forEach(patient=>{if(patient.name.toLowerCase().includes(searchTerm.toLowerCase())){searchResults.push(patient)}})}else{searchResults.push(...patients)}}loaderElement.classList.add("hidden");if(searchResults.length>0){renderPatients(searchResults)}else{patientsContainer.innerHTML='<p class="no-results">No Tests found.</p>'}})});function renderPatients(patients){patientsContainer.innerHTML="";const table=document.createElement("table");table.classList.add("patient-table");const tableHeaderRow=document.createElement("tr");tableHeaderRow.classList.add("table-header");const headers=["Name","Test Case","Cost (UGX)","Actions"];headers.forEach(headerText=>{const tableHeaderCell=document.createElement("th");tableHeaderCell.textContent=headerText;tableHeaderRow.appendChild(tableHeaderCell)});table.appendChild(tableHeaderRow);patients.forEach(patient=>{const tableRow=document.createElement("tr");tableRow.classList.add("table-row");const nameCell=createTableCell(patient.name);const sexCell=createTableCell(patient.sex);const dobCell=createTableCell(patient.dob);const dob=new Date(patient.dob);const today=new Date;const age=today.getFullYear()-dob.getFullYear();const ageCell=createTableCell(age.toString());const actionsCell=document.createElement("td");const deleteButton=document.createElement("button");deleteButton.textContent="Delete";deleteButton.classList.add("delete-button");deleteButton.addEventListener("click",function(){const confirmed=confirm("Are you sure you want to delete this test?");if(confirmed){const password=prompt("Please enter the password to confirm:");if(password==="mm"){const patientRef=ref(database,"tests/"+patient.name);remove(patientRef).then(()=>{console.log("Test deleted successfully")}).catch(error=>{console.log("Error deleting test:",error)})}else{alert("Incorrect password. Deletion canceled.")}}else{console.log("Deletion canceled by the user")}});actionsCell.appendChild(deleteButton);tableRow.appendChild(nameCell);tableRow.appendChild(sexCell);tableRow.appendChild(dobCell);tableRow.appendChild(actionsCell);table.appendChild(tableRow)});patientsContainer.appendChild(table);function createTableCell(text){const cell=document.createElement("td");cell.textContent=text;return cell}}const addRecordForm=document.getElementById("addRecordForm");let currentPatientName="";function showMessage(message){const messageElement=document.getElementById("message");messageElement.textContent=message;messageElement.style.display="block";setTimeout(()=>{messageElement.style.display="none"},4e3)}showMessage("");addRecordForm.addEventListener("submit",function(e){e.preventDefault();const patientName=currentPatientName;const testsTaken=document.getElementById("testsTaken").value;const resultsObtained=document.getElementById("resultsObtained").value;const medicationTaken=document.getElementById("medicationTaken").value;const additionalNotes=document.getElementById("additionalNotes").value;const dateTaken=Date.now();const recordData={testsTaken:testsTaken,resultsObtained:resultsObtained,medicationTaken:medicationTaken,additionalNotes:additionalNotes,dateTaken:dateTaken};const patientRef=ref(database,`tests/${patientName}`);const newRecordRef=push(child(patientRef,"history"));set(newRecordRef,recordData).then(()=>{addRecordForm.reset();showMessage("Record added successfully!")}).catch(error=>{console.error("Error adding record:",error);showMessage("Error adding record. Please try again.")})});function openPatientHistoryPopup(patient){const popupOverlay=document.getElementById("popupOverlay1");const popupClose=document.getElementById("popupClose1");const patientDetails=document.getElementById("patientDetails");const patientHistory=document.getElementById("patientHistory");patientDetails.innerHTML="";patientHistory.innerHTML="";popupOverlay.style.visibility="visible";popupOverlay.style.opacity="1";popupClose.addEventListener("click",function(){popupOverlay.style.visibility="hidden";popupOverlay.style.opacity="0"});const patientDetailsHTML=`
  <div class="patient-details">  
    <h3>Test Details:</h3>
    <p><strong>Test Name:</strong> ${patient.name}</p>
    <p><strong>Cost:</strong> ${patient.dob}</p>
    <p><strong>Test Case:</strong> ${patient.sex}</p>
    <!-- Add more patient details as needed -->
     <button class="edit-button"><i class="fa fa-edit"></i>Edit</button>
        <button class="print-button"><i class="fa fa-print"></i>Print Details</button>
        <button class="del-button"><i class="fa fa-trash"></i>Delete Test</button>
  </div>
`;patientDetails.innerHTML=patientDetailsHTML;const patientHistoryElement=document.getElementById("patientHistory");const patientName=patient.name;const patientHistoryRef=ref(database,`tests/${patientName}/history`);onValue(patientHistoryRef,snapshot=>{patientHistoryElement.innerHTML="";if(snapshot.exists()){snapshot.forEach(childSnapshot=>{const recordKey=childSnapshot.key;const record=childSnapshot.val();const recordElement=createRecordElement(recordKey,record);patientHistoryElement.appendChild(recordElement)})}else{const noRecordsElement=document.createElement("p");noRecordsElement.textContent="No Records Found";noRecordsElement.style.fontStyle="italic";patientHistoryElement.appendChild(noRecordsElement)}});function createRecordElement(recordKey,record){const recordElement=document.createElement("div");recordElement.classList.add("record");const recordKeyElement=document.createElement("h4");recordKeyElement.textContent="Record Key: "+recordKey;recordElement.appendChild(recordKeyElement);const dateTakenElement=document.createElement("p");const dateTaken=new Date(parseInt(record.dateTaken));if(!isNaN(dateTaken.getTime())){dateTakenElement.textContent="Date Taken: "+dateTaken.toLocaleString()}else{dateTakenElement.textContent="Invalid Date"}recordElement.appendChild(dateTakenElement);const testsTakenElement=document.createElement("p");testsTakenElement.textContent="Tests Taken: "+record.testsTaken;recordElement.appendChild(testsTakenElement);const resultsObtainedElement=document.createElement("p");resultsObtainedElement.textContent="Results Obtained: "+record.resultsObtained;recordElement.appendChild(resultsObtainedElement);const medicationTakenElement=document.createElement("p");medicationTakenElement.textContent="Medication Taken: "+record.medicationTaken;recordElement.appendChild(medicationTakenElement);const additionalNotesElement=document.createElement("p");additionalNotesElement.textContent="Additional Notes: "+record.additionalNotes;recordElement.appendChild(additionalNotesElement);const deleteButton=document.createElement("button");deleteButton.classList.add("delete-button");const binIcon=document.createElement("i");binIcon.classList.add("fa","fa-trash");deleteButton.innerHTML="";deleteButton.appendChild(binIcon);deleteButton.innerHTML+=" Delete";deleteButton.addEventListener("click",()=>{deleteRecord(recordKey)});recordElement.appendChild(deleteButton);return recordElement}function deleteRecord(recordKey){const patientName=patient.name;const confirmation=confirm("Are you sure you want to delete this record?");if(confirmation){const password=prompt("Please enter your password to confirm the deletion:");if(password==="mm"){const recordRef=ref(database,`patients/${patientName}/history/${recordKey}`);remove(recordRef).then(()=>{alert("Record deleted successfully!")}).catch(error=>{console.error("Error deleting record:",error);alert("Error deleting record. Please try again.")})}else{alert("Wrong password. Deletion cancelled.")}}}}const addMedicationBtn=document.getElementById("addMedicationBtn");const addRecordPopupOverlay=document.getElementById("addRecordPopupOverlay");const addRecordPopupClose=document.getElementById("addRecordPopupClose");addMedicationBtn.addEventListener("click",()=>{addRecordPopupOverlay.style.visibility="visible";addRecordPopupOverlay.style.opacity="1"});addRecordPopupClose.addEventListener("click",()=>{addRecordPopupOverlay.style.visibility="hidden";addRecordPopupOverlay.style.opacity="0"});const loaderElement=document.getElementById("loader");const patientsRef=ref(database,"tests");loaderElement.classList.remove("hidden");onValue(patientsRef,snapshot=>{const patientsData=snapshot.val();if(patientsData){patients=Object.values(patientsData);renderPatients(patients)}loaderElement.classList.add("hidden")});const uploadForm=document.getElementById("addPatientForm");uploadForm.addEventListener("DOMContentLoaded",()=>{populateNextPatientId()});uploadForm.addEventListener("submit",e=>{e.preventDefault();const nameInput=document.getElementById("name");const dobInput=document.getElementById("dob");const parentsInput=document.getElementById("parents");const residenceInput=document.getElementById("residence");const paymentInput=document.getElementById("payment");const sexInput=document.getElementById("sex");const patientIdInput=document.getElementById("patientId");const savePatientData=()=>{const name=nameInput.value;const dob=dobInput.value;const parents=parentsInput.value;const residence=residenceInput.value;const payment=paymentInput.value;const sex=sexInput.value;const patientId=patientIdInput.value;const patientsRef=ref(database,"tests");const newPatientRef=child(patientsRef,patientId);set(newPatientRef,{name:name,dob:dob,parents:parents,residence:residence,payment:payment,sex:sex,patientId:patientId}).then(()=>{nameInput.value="";dobInput.value="";parentsInput.value="";residenceInput.value="";paymentInput.value="";sexInput.value="";patientIdInput.value="";showMessage("Patient details uploaded successfully!")}).catch(error=>{console.error("Error uploading patient details:",error);showMessage("Error uploading patient details. Please try again.")})};const showMessage=message=>{const messageElement=document.getElementById("message");messageElement.textContent=message;messageElement.style.display="block";setTimeout(()=>{messageElement.style.display="none"},3e3)};const addPatientForm=document.getElementById("addPatientForm");addPatientForm.addEventListener("submit",e=>{e.preventDefault();savePatientData()})});const onlineStatusElement=document.getElementById("onlineStatus");const overlayElement=document.getElementById("overlay");function updateOnlineStatus(){if(navigator.onLine){onlineStatusElement.innerHTML='<i class="fa fa-wifi"></i>Online';onlineStatusElement.classList.remove("offline");onlineStatusElement.classList.add("online");overlayElement.style.display="none"}else{onlineStatusElement.innerHTML='<i class="fa fa-exclamation-triangle"></i>Offline';onlineStatusElement.classList.remove("online");onlineStatusElement.classList.add("offline");overlayElement.style.display="block"}}updateOnlineStatus();window.addEventListener("online",updateOnlineStatus);window.addEventListener("offline",updateOnlineStatus);window.addEventListener("load",function(){const splashScreen=document.getElementById("splashScreen");splashScreen.style.opacity="0";setTimeout(function(){splashScreen.style.display="none"},500)});