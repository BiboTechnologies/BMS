import{initializeApp}from"https://www.gstatic.com/firebasejs/9.0.2/firebase-app.js";import{getDatabase,ref,remove,push,get,onValue,child,set}from"https://www.gstatic.com/firebasejs/9.0.2/firebase-database.js";import{getAuth,onAuthStateChanged,sendPasswordResetEmail,signInWithEmailAndPassword,GoogleAuthProvider,signInWithPopup}from"https://www.gstatic.com/firebasejs/9.0.2/firebase-auth.js";const firebaseConfig={apiKey:"AIzaSyCi_hufIZTzsYtdPGQtvtmKmAkkrydmn_A",authDomain:"abbah-83a7b.firebaseapp.com",databaseURL:"https://abbah-83a7b-default-rtdb.firebaseio.com",projectId:"abbah-83a7b",storageBucket:"abbah-83a7b.appspot.com",messagingSenderId:"379729759051",appId:"1:379729759051:web:e75528d61b02d1e4f536ce",measurementId:"G-H41J2WMR6S"};const app=initializeApp(firebaseConfig);const database=getDatabase(app);const auth=getAuth(app);let authToken;let tokenExpiryTime;function generateToken(){authToken=Math.random().toString(36).substring(2);const currentTime=new Date;const tokenExpiryTime=new Date(currentTime.getTime()+24*60*60*1e3);localStorage.setItem("authToken",authToken);localStorage.setItem("tokenExpiryTime",tokenExpiryTime.toString())}function retrieveTokenFromLocalStorage(){authToken=localStorage.getItem("authToken");const storedExpiryTime=localStorage.getItem("tokenExpiryTime");if(authToken&&storedExpiryTime){tokenExpiryTime=new Date(storedExpiryTime)}}function isTokenValid(){const currentTime=new Date;return tokenExpiryTime>currentTime}window.addEventListener("load",function(){retrieveTokenFromLocalStorage();if(!isTokenValid()){window.location.href="login.html"}});document.addEventListener("contextmenu",function(event){if(document.getElementById("loginpopup").style.display==="block"){event.preventDefault()}document.addEventListener("keydown",function(event){if(event.keyCode===123){event.preventDefault()}})});const allowedEmails=["biboofficial256@gmail.com"];document.getElementById("loginForm").addEventListener("submit",function(event){event.preventDefault();const submitBtn=document.getElementById("submitBtn");submitBtn.innerHTML='<i class="fas fa-spinner fa-spin"></i> Submitting';const email=document.getElementById("email").value;const password=document.getElementById("password").value;signInWithEmailAndPassword(auth,email,password).then(userCredential=>{if(allowedEmails.includes(email)){document.getElementById("loginoverlay").style.display="none";document.getElementById("loginpopup").style.display="none";generateToken()}else{const errorContainer=document.getElementById("errorContainer");errorContainer.textContent="Access denied. You are not authorized.";errorContainer.style.display="block";signOut(auth).then(()=>{setTimeout(function(){submitBtn.innerHTML="Submit"},2e3)}).catch(error=>{console.error("Error signing out:",error)})}}).catch(error=>{const errorMessage=error.message;const errorContainer=document.getElementById("errorContainer");errorContainer.textContent=errorMessage;errorContainer.style.display="block";setTimeout(function(){submitBtn.innerHTML="Submit"},2e3)})});document.getElementById("forgotPasswordLink").addEventListener("click",function(event){event.preventDefault();const email=document.getElementById("email").value;sendPasswordResetEmail(auth,email).then(()=>{showMessage(" A password reset email has been sent. Please check your inbox.")}).catch(error=>{const errorMessage=error.message;alert("Password reset email failed to send. "+errorMessage)})});function displayMessage(title,message,isSuccess=false){const existingMessages=document.querySelectorAll(".retry-message");existingMessages.forEach(function(message){message.remove()});const messageDiv=document.createElement("div");messageDiv.classList.add("retry-message");if(isSuccess){messageDiv.style.backgroundColor="#4caf50"}const closeButton=document.createElement("button");closeButton.classList.add("close-btn");closeButton.innerHTML='<i class="fa fa-times"></i>';closeButton.addEventListener("click",function(){messageDiv.remove()});const titleElement=document.createElement("h2");titleElement.textContent=title;const messageElement=document.createElement("p");messageElement.textContent=message;messageDiv.appendChild(titleElement);messageDiv.appendChild(messageElement);document.body.appendChild(messageDiv);setTimeout(function(){messageDiv.remove()},1500)}function displayUserInformation(user){const profileName=document.querySelector(".profile_info h2");profileName.textContent=user.displayName;const profileImage=document.querySelector(".profile_pic img");profileImage.src=user.photoURL;const dropdownProfileImage=document.querySelector(".user-profile img");dropdownProfileImage.src=user.photoURL;displayMessage("",`Welcome, ${user.displayName}.`,true)}function handleSignInSuccess(user){displayUserInformation(user)}function handleSignInError(error){console.error("Error signing in:",error);displayMessage("Access Denied. Please sign in with a valid email.")}function signInWithGoogle(){var provider=new GoogleAuthProvider;signInWithPopup(auth,provider).then(function(result){const user=result.user;handleSignInSuccess(user)}).catch(function(error){handleSignInError(error)})}window.addEventListener("load",function(){auth.onAuthStateChanged(function(user){if(user){displayUserInformation(user)}else{signInWithGoogle()}})});function retryCallback(){signInWithGoogle()}displayMessage("Signing in...","Please wait...",false);document.addEventListener("click",function(event){const target=event.target;if(target.tagName==="A"&&target.href.startsWith(window.location.origin)){localStorage.setItem("clickedLink",target.href)}});const logoutButton=document.getElementById("logoutButton");const overlay=document.getElementById("overlay");logoutButton.addEventListener("click",function(event){event.preventDefault();localStorage.setItem("logoutPage",window.location.href);const clickedLink=localStorage.getItem("clickedLink");if(clickedLink){localStorage.setItem("logoutPage",clickedLink)}displayOverlay();setTimeout(()=>{logOut();hideOverlay()},2e3)});function displayOverlay(){const spinner=document.createElement("div");spinner.id="loadingSpinner";overlay.appendChild(spinner);const loggingOutText=document.createElement("div");loggingOutText.id="loggingOutText";loggingOutText.textContent="Logging Out...";overlay.appendChild(loggingOutText);overlay.style.display="flex"}function hideOverlay(){const spinner=document.getElementById("loadingSpinner");const loggingOutText=document.getElementById("loggingOutText");overlay.removeChild(spinner);overlay.removeChild(loggingOutText);overlay.style.display="none"}function logOut(){auth.signOut().then(function(){localStorage.removeItem("authToken");localStorage.removeItem("tokenExpiryTime");localStorage.removeItem("clickedLink");const logoutPage=localStorage.getItem("logoutPage")||"login.html";window.location.href=logoutPage}).catch(function(error){console.error("Error signing out:",error)})}const form=document.querySelector(".popup-form");const submitButton=document.querySelector(".popup-form button");const successMessage=document.createElement("p");successMessage.textContent="Staff details uploaded successfully!";successMessage.style.color="green";const errorMessage=document.createElement("p");errorMessage.textContent="Error uploading Staff details. Please try again.";errorMessage.style.color="red";const patientsContainer=document.getElementById("patients");let patients=[];form.addEventListener("submit",function(e){e.preventDefault();const name=document.getElementById("name").value;const dob=document.getElementById("dob").value;const parents=document.getElementById("parents").value;const patientData={name:name,dob:dob,parents:parents};const patientsRef=ref(database,"staff");const newPatientRef=child(patientsRef,name);set(newPatientRef,patientData).then(()=>{form.reset();form.appendChild(successMessage)}).catch(()=>{form.appendChild(errorMessage)})});searchButton.addEventListener("click",()=>{const searchTerm=searchInput.value.trim();loaderElement.classList.remove("hidden");patientsContainer.innerHTML="";const staffRef=ref(database,"staff");onValue(staffRef,snapshot=>{const staffData=snapshot.val();const searchResults=[];if(staffData){const staff=Object.entries(staffData);const addedKeys=new Set;if(searchTerm!==""){staff.forEach(([key,person])=>{if(person.name.toLowerCase().includes(searchTerm.toLowerCase())||person.dob.toLowerCase().includes(searchTerm.toLowerCase())){if(!addedKeys.has(key)){searchResults.push({key:key,...person});addedKeys.add(key)}}})}else{staff.forEach(([key,person])=>{if(!addedKeys.has(key)){searchResults.push({key:key,...person});addedKeys.add(key)}})}}loaderElement.classList.add("hidden");if(searchResults.length>0){renderPatients(searchResults)}else{patientsContainer.innerHTML='<p class="no-results">No staff found.</p>'}})});const sortSelect=document.getElementById("sortSelect");const sortValue=sortSelect.value;if(sortValue==="expiry"){patients.sort((a,b)=>new Date(a.dob)-new Date(b.dob))}else if(sortValue==="alphabetical"){patients.sort((a,b)=>a.name.localeCompare(b.name))}function filterPatients(patients,searchTerm){const filteredPatients=patients.filter(patient=>{const patientName=patient.name.toLowerCase();return patientName.includes(searchTerm.toLowerCase())});renderPatients(filteredPatients)}searchInput.addEventListener("input",()=>{const searchTerm=searchInput.value.trim();const patientsRef=ref(database,"staff");onValue(patientsRef,snapshot=>{const patientsData=snapshot.val();const patients=patientsData?Object.values(patientsData):[];filterPatients(patients,searchTerm)})});function renderPatients(patients){patientsContainer.innerHTML="";const table=document.createElement("table");table.classList.add("patients-table");const headers=["Name","Contact","Work Type (Job)","Actions"];const headerRow=document.createElement("tr");headers.forEach(headerText=>{const th=document.createElement("th");th.textContent=headerText;headerRow.appendChild(th)});table.appendChild(headerRow);patients.forEach(patient=>{const row=document.createElement("tr");const nameCell=document.createElement("td");nameCell.textContent=patient.name;row.appendChild(nameCell);const contactCell=document.createElement("td");contactCell.textContent=patient.parents;row.appendChild(contactCell);const workTypeCell=document.createElement("td");workTypeCell.textContent=patient.dob;row.appendChild(workTypeCell);const deletePatient=patient=>{const password=prompt("Enter the password to delete the Staff:");if(password!=="mm"){alert("Invalid password. Patient deletion canceled.");return}const patientRef=ref(database,`staff/${patient.name}`);remove(patientRef).then(()=>{console.log("Staff deleted successfully.");alert(`Patient ${patient.name} deleted successfully.`)}).catch(error=>{console.error("Error deleting patient:",error);alert(`Error deleting staff ${patient.name}. Please try again.`)})};const actionsCell=document.createElement("td");const deleteButton=document.createElement("button");deleteButton.textContent="Delete";deleteButton.classList.add("delete-button");deleteButton.addEventListener("click",function(){deletePatient(patient)});actionsCell.appendChild(deleteButton);const checkInButton=document.createElement("button");checkInButton.textContent="Check-In";checkInButton.classList.add("check-in-button");checkInButton.addEventListener("click",function(){const checkInTime=new Date;const checkInData={checkInTime:checkInTime.toLocaleTimeString(),checkInDate:checkInTime.toLocaleDateString()};const patientCheckin=document.getElementById("patientCheckin");const patientRef=ref(database,`staff/${patient.name}/checkin`);const checkInDate=checkInTime.toLocaleDateString().replaceAll("/","-");const checkInRef=child(patientRef,checkInDate);const loader=document.getElementById("loader");loader.style.display="block";get(checkInRef).then(snapshot=>{if(snapshot.exists()){alert(` ${patient.name} has already checked in today.`);loader.style.display="none"}else{set(checkInRef,checkInData).then(()=>{console.log("Check-in data saved successfully:",checkInData);const checkInDetails=document.createElement("p");checkInDetails.textContent=`Check-In Time: ${checkInData.checkInTime}, Check-In Date: ${checkInData.checkInDate}`;patientCheckin.appendChild(checkInDetails);const checkInMessage=document.getElementById("checkInMessage");checkInMessage.textContent=` ${patient.name} checked in successfully!`;checkInMessage.style.display="block";loader.style.display="none";setTimeout(()=>{checkInMessage.style.display="none"},3e3)}).catch(error=>{console.error("Error saving check-in data:",error);const checkInMessage=document.getElementById("checkInMessage");checkInMessage.textContent=`Error checking in  ${patient.name}. Please try again.`;checkInMessage.style.display="block";loader.style.display="none";setTimeout(()=>{checkInMessage.style.display="none"},3e3)})}}).catch(error=>{console.error("Error checking check-in data:",error)})});actionsCell.appendChild(checkInButton);const checkOutButton=document.createElement("button");checkOutButton.textContent="Check-Out";checkOutButton.classList.add("check-out-button");checkOutButton.addEventListener("click",function(){const checkOutTime=new Date;const checkOutData={checkOutTime:checkOutTime.toLocaleTimeString(),checkOutDate:checkOutTime.toLocaleDateString()};const checkInDate=checkOutTime.toLocaleDateString().replaceAll("/","-");const patientCheckInRef=ref(database,`staff/${patient.name}/checkin/${checkInDate}`);get(patientCheckInRef).then(snapshot=>{if(snapshot.exists()){const checkOutRef=child(patientCheckInRef,"checkOutTime");get(checkOutRef).then(checkOutSnapshot=>{if(checkOutSnapshot.exists()){alert(` ${patient.name} has already checked out today.`)}else{set(checkOutRef,checkOutData.checkOutTime).then(()=>{console.log("Check-out data saved successfully:",checkOutData);const checkOutDetails=document.createElement("p");checkOutDetails.textContent=`Check-Out Time: ${checkOutData.checkOutTime}, Check-Out Date: ${checkOutData.checkOutDate}`;patientCheckin.appendChild(checkOutDetails);const checkOutMessage=document.getElementById("checkOutMessage");checkOutMessage.textContent=` ${patient.name} checked out successfully!`;checkOutMessage.style.display="block";checkOutButton.style.display="none";setTimeout(()=>{checkOutMessage.style.display="none"},3e3)}).catch(error=>{console.error("Error saving check-out data:",error);const checkOutMessage=document.getElementById("checkOutMessage");checkOutMessage.textContent=`Error checking out ${patient.name}. Please try again.`;checkOutMessage.style.display="block"})}}).catch(error=>{console.error("Error checking check-out data:",error)})}else{alert(`Cannot check out ${patient.name}. Please check in first.`)}}).catch(error=>{console.error("Error checking check-in data:",error)})});actionsCell.appendChild(checkOutButton);const viewButton=document.createElement("button");viewButton.textContent="View";viewButton.classList.add("view-button");viewButton.addEventListener("click",function(){currentPatientName=patient.name;openPatientHistoryPopup(patient)});actionsCell.appendChild(viewButton);row.appendChild(actionsCell);table.appendChild(row)});function deletePatient(patient){console.log("Deleting patient:",patient.name)}function checkInPatient(patient){console.log("Checking in patient:",patient.name)}patientsContainer.appendChild(table)}const addRecordForm=document.getElementById("addRecordForm");let currentPatientName="";function showMessage(message){const messageElement=document.getElementById("message");messageElement.textContent=message;messageElement.style.display="block";setTimeout(()=>{messageElement.style.display="none"},4e3)}showMessage("");addRecordForm.addEventListener("submit",function(e){e.preventDefault();const patientName=currentPatientName;const testsTaken=document.getElementById("testsTaken").value;const resultsObtained=document.getElementById("resultsObtained").value;const medicationTaken=document.getElementById("medicationTaken").value;const additionalNotes=document.getElementById("additionalNotes").value;const recordData={testsTaken:testsTaken,resultsObtained:resultsObtained,medicationTaken:medicationTaken,additionalNotes:additionalNotes};const patientRef=ref(database,`staff/${patientName}`);const newRecordRef=push(child(patientRef,"history"));set(newRecordRef,recordData).then(()=>{addRecordForm.reset();showMessage("Record added successfully!")}).catch(error=>{console.error("Error adding record:",error);showMessage("Error adding record. Please try again.")})});function openPatientHistoryPopup(patient){const popupOverlay=document.getElementById("popupOverlay1");const popupClose=document.getElementById("popupClose1");const patientHistory=document.getElementById("patientHistory");const patientCheckin=document.getElementById("patientCheckin");patientHistory.innerHTML="";patientCheckin.innerHTML="";const patientHistoryContent=document.createElement("div");patientHistoryContent.innerHTML=`
    <p><strong>Name of Medicine:</strong> ${patient.name}</p>
    <p><strong>Date of Expiry:</strong> ${patient.dob}</p>
    <p><strong>Number of Pieces:</strong> ${patient.parents}</p>
    <p><strong>Date of Stock:</strong> ${patient.dos}</p>
    <p><strong>Medical History:</strong> ${patient.medicalHistory}</p>
  `;patientHistory.appendChild(patientHistoryContent);const patientRef=ref(database,`staff/${patient.name}`);const checkinRef=child(patientRef,"checkin");get(checkinRef).then(snapshot=>{if(snapshot.exists()){const checkinData=snapshot.val();const sortedCheckinData=Object.values(checkinData).sort((a,b)=>{return new Date(b.checkInDate)-new Date(a.checkInDate)});const table=document.createElement("table");table.classList.add("checkin-table");const headerRow=document.createElement("tr");const timeHeader=document.createElement("th");timeHeader.textContent="Check-In Time";headerRow.appendChild(timeHeader);const dateHeader=document.createElement("th");dateHeader.textContent="Check-In Date";headerRow.appendChild(dateHeader);const checkoutHeader=document.createElement("th");checkoutHeader.textContent="Check-Out Time";headerRow.appendChild(checkoutHeader);table.appendChild(headerRow);sortedCheckinData.forEach(checkinRecord=>{const row=document.createElement("tr");const timeCell=document.createElement("td");timeCell.textContent=checkinRecord.checkInTime;row.appendChild(timeCell);const dateCell=document.createElement("td");dateCell.textContent=checkinRecord.checkInDate;row.appendChild(dateCell);const checkoutCell=document.createElement("td");checkoutCell.textContent=checkinRecord.checkOutTime;row.appendChild(checkoutCell);table.appendChild(row)});patientCheckin.insertBefore(table,patientCheckin.firstChild)}}).catch(error=>{console.error("Error fetching check-in data:",error)});popupOverlay.style.visibility="visible";popupOverlay.style.opacity="1";addRecordPopupOverlay.style.visibility="hidden";addRecordPopupOverlay.style.opacity="0";popupClose.addEventListener("click",function(){popupOverlay.style.visibility="hidden";popupOverlay.style.opacity="0"});const patientHistoryElement=document.getElementById("patientHistory");const patientName=patient.name;const patientHistoryRef=ref(database,`staff/${patientName}/history`);onValue(patientHistoryRef,snapshot=>{patientHistoryElement.innerHTML="";if(snapshot.exists()){snapshot.forEach(childSnapshot=>{const recordKey=childSnapshot.key;const record=childSnapshot.val();const recordElement=createRecordElement(recordKey,record);patientHistoryElement.appendChild(recordElement)})}else{const noRecordsElement=document.createElement("p");noRecordsElement.textContent="No Records Found";noRecordsElement.style.fontStyle="italic";patientHistoryElement.appendChild(noRecordsElement)}});function createRecordElement(recordKey,record){const recordElement=document.createElement("div");recordElement.classList.add("record");const recordKeyElement=document.createElement("h4");recordKeyElement.textContent="Record Key: "+recordKey;recordElement.appendChild(recordKeyElement);const testsTakenElement=document.createElement("p");testsTakenElement.textContent="Work Days: "+record.testsTaken;recordElement.appendChild(testsTakenElement);const resultsObtainedElement=document.createElement("p");resultsObtainedElement.textContent="Work Hours: "+record.resultsObtained;recordElement.appendChild(resultsObtainedElement);const medicationTakenElement=document.createElement("p");medicationTakenElement.textContent="Monthly Salary: Ug.shs "+record.medicationTaken+".00";recordElement.appendChild(medicationTakenElement);const additionalNotesElement=document.createElement("p");additionalNotesElement.textContent="Daily Allowance: Ug.shs "+record.additionalNotes+".00";recordElement.appendChild(additionalNotesElement);const deleteButton=document.createElement("button");deleteButton.classList.add("delete-button");const binIcon=document.createElement("i");binIcon.classList.add("fa","fa-trash");deleteButton.innerHTML="";deleteButton.appendChild(binIcon);deleteButton.innerHTML+=" Delete";deleteButton.addEventListener("click",()=>{deleteRecord(recordKey)});recordElement.appendChild(deleteButton);return recordElement}function deleteRecord(recordKey){const patientName=patient.name;const confirmation=confirm("Are you sure you want to delete this record?");if(confirmation){const password=prompt("Please enter your password to confirm the deletion:");if(password==="mm"){const recordRef=ref(database,`staff/${patientName}/history/${recordKey}`);remove(recordRef).then(()=>{alert("Record deleted successfully!")}).catch(error=>{console.error("Error deleting record:",error);alert("Error deleting record. Please try again.")})}else{alert("Wrong password. Deletion cancelled.")}}}}const addMedicationBtn=document.getElementById("addMedicationBtn");const addRecordPopupOverlay=document.getElementById("addRecordPopupOverlay");const addRecordPopupClose=document.getElementById("addRecordPopupClose");addMedicationBtn.addEventListener("click",()=>{addRecordPopupOverlay.style.visibility="visible";addRecordPopupOverlay.style.opacity="1"});addRecordPopupClose.addEventListener("click",()=>{addRecordPopupOverlay.style.visibility="hidden";addRecordPopupOverlay.style.opacity="0"});const loaderElement=document.getElementById("loader");const patientsRef=ref(database,"staff");loaderElement.classList.remove("hidden");onValue(patientsRef,snapshot=>{const patientsData=snapshot.val();if(patientsData){patients=Object.values(patientsData);renderPatients(patients)}loaderElement.classList.add("hidden")});const uploadForm=document.getElementById("addPatientForm");uploadForm.addEventListener("submit",e=>{e.preventDefault();const nameInput=document.getElementById("name");const dobInput=document.getElementById("dob");const parentsInput=document.getElementById("parents");const database=getDatabase();const savePatientData=()=>{const name=nameInput.value;const dob=dobInput.value;const parents=parentsInput.value;const patientsRef=ref(database,"staff");const newPatientRef=child(patientsRef,name);set(newPatientRef,{name:name,dob:dob,parents:parents}).then(()=>{nameInput.value="";dobInput.value="";parentsInput.value="";showMessage("Patient details uploaded successfully!")}).catch(error=>{console.error("Error uploading patient details:",error);showMessage("Error uploading patient details. Please try again.")})};const showMessage=message=>{const messageElement=document.getElementById("message");messageElement.textContent=message;messageElement.style.display="block";setTimeout(()=>{messageElement.style.display="none"},3e3)}});const onlineStatusElement=document.getElementById("onlineStatus");const overlayElement=document.getElementById("overlay");function updateOnlineStatus(){if(navigator.onLine){onlineStatusElement.innerHTML='<i class="fa fa-wifi"></i>';onlineStatusElement.classList.remove("offline");onlineStatusElement.classList.add("online");overlayElement.style.display="none"}else{onlineStatusElement.innerHTML='<i class="fa fa-exclamation-triangle"></i>';onlineStatusElement.classList.remove("online");onlineStatusElement.classList.add("offline");overlayElement.style.display="block"}}updateOnlineStatus();window.addEventListener("online",updateOnlineStatus);window.addEventListener("offline",updateOnlineStatus);window.addEventListener("load",function(){const splashScreen=document.getElementById("splashScreen");splashScreen.style.opacity="0";setTimeout(function(){splashScreen.style.display="none"},500)});